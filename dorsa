#!/usr/bin/env python

import sys
import cPickle as pickle
import time

import theano as th
import numpy as np

import world
import feature
import utils

th.config.optimizer_verbose = True
th.config.allow_gc = False
th.config.optimizer = 'fast_compile'
th.config.mode = 'FAST_COMPILE'

epochs = 40


weights = [
        # (explore, exploit)
        (100, 100),
        (100, 30),
        (100, 50),
]

if __name__ == '__main__':
    theta_explore = utils.scalar()
    theta_exploit = utils.scalar()

    for active in [False, True]:

        w = world.dorsa(active, theta_explore, theta_exploit)

        for weight in weights:
            theta_explore.set_value(weight[0])
            theta_exploit.set_value(weight[1])

            num_cars = len(w.cars)
            controls = [[] for i in range(num_cars)]
            states = [[] for i in range(num_cars)]
            beliefs = [[] for i in range(num_cars)]

            for t in range(epochs):
                print("t = ", t)
                for car in w.cars:
                    car.control(0,0)
                for car, hist in zip(w.cars, controls):
                    hist.append(car.u)
                for car in w.cars:
                    car.move()
                for car, hist in zip(w.cars, states):
                    hist.append(car.x)
                for car, hist in zip(w.cars, beliefs):
                    if hasattr(car, 'log_ps'):
                        hist.append(np.asarray([np.exp(log_p.get_value()) for log_p in car.log_ps]))

            with open('data/%s-%s-%d-%d-%d.pickle'%("ndorsa", active, theta_explore.get_value(), theta_exploit.get_value(), int(time.time())), 'w') as f:
                pickle.dump((controls, states, beliefs), f)

            for car in w.cars:
                car.reset()

            if not active:
                break
