#!/usr/bin/env python

import sys
import cPickle as pickle
import time

import theano as th
import numpy as np

import world
import feature
import utils

th.config.optimizer_verbose = True
th.config.allow_gc = False
th.config.optimizer = 'fast_compile'
th.config.mode = 'FAST_COMPILE'

epochs = 30

h_v = [ 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, ]
#h_v = [-.4, -.3, -.2, -.1]

if __name__ == '__main__':

    for hv in h_v:
        w = world.rss_cross(human_y = hv)

        num_cars = len(w.cars)
        controls = [[] for i in range(num_cars)]
        states = [[] for i in range(num_cars)]
        beliefs = [[] for i in range(num_cars)]

        for t in range(epochs):
            print("t = ", t)
            for car in w.cars:
                car.control(0,0)
            for car, hist in zip(w.cars, controls):
                hist.append(car.u)
            for car in w.cars:
                car.move()
            for car, hist in zip(w.cars, states):
                hist.append(car.x)
            for car, hist in zip(w.cars, beliefs):
                if hasattr(car, 'log_ps'):
                    hist.append(np.asarray([np.exp(log_p.get_value()) for log_p in car.log_ps]))

        with open('data/%s-%f-%d.pickle'%("nrss_cross", hv, int(time.time())), 'w') as f:
            pickle.dump((controls, states, beliefs), f)

        for car in w.cars:
            car.reset()
